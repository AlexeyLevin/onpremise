version: '3.4'
x-sentry-defaults: &sentry_defaults
  restart: unless-stopped
  build:
    context: ./sentry
    args:
      SENTRY_IMAGE: ${SENTRY_IMAGE}
  depends_on:
    - redis
    - postgres
    - memcached
    - smtp
    - snuba-api
    - snuba-consumer
    - snuba-replacer
    - symbolicator
    - kafka
  env_file: .env
  environment:
    SENTRY_MEMCACHED_HOST: memcached
    SENTRY_POSTGRES_HOST: postgres
    SENTRY_EMAIL_HOST: smtp
    SNUBA: 'http://snuba-api:1218'
    SENTRY_KAFKA_HOST: 'kafka:9092'
  volumes:
    - 'sentry-data:/var/lib/sentry/files'
x-snuba-defaults: &snuba_defaults
  restart: unless-stopped
  depends_on:
    - redis
    - clickhouse
    - kafka
  image: 'getsentry/snuba:latest'
  environment:
    SNUBA_SETTINGS: docker
    CLICKHOUSE_HOST: clickhouse
    DEFAULT_BROKERS: 'kafka:9093'
    REDIS_HOST: redis
    # TODO: Remove these after getsentry/snuba#353
    UWSGI_MAX_REQUESTS: '10000'
    UWSGI_DISABLE_LOGGING: 'true'
    UWSGI_ENABLE_THREADS: 'true'
    UWSGI_DIE_ON_TERM: 'true'
    UWSGI_NEED_APP: 'true'
    UWSGI_IGNORE_SIGPIPE: 'true'
    UWSGI_IGNORE_WRITE_ERRORS: 'true'
    UWSGI_DISABLE_WRITE_EXCEPTION:  'true'
services:
  smtp:
    restart: unless-stopped
    image: tianon/exim4
  memcached:
    restart: unless-stopped
    image: 'memcached:1.5-alpine'
  redis:
    restart: unless-stopped
    image: 'redis:5.0-alpine'
    command: redis-server --appendonly yes
    volumes:
      - 'sentry-redis:/data'
  postgres:
    restart: unless-stopped
    image: 'postgres:9.6'
    volumes:
      - 'sentry-postgres:/var/lib/postgresql/data'
  zookeeper:
    restart: unless-stopped
    image: 'confluentinc/cp-zookeeper:5.1.2'
    environment:
      ZOOKEEPER_CLIENT_PORT: '2181'
    volumes:
      - 'sentry-zookeeper:/var/lib/zookeeper'
  kafka:
    restart: unless-stopped
    depends_on:
      - zookeeper
    image: 'confluentinc/cp-kafka:5.1.2'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: 'INTERNAL://0.0.0.0:9093,EXTERNAL://0.0.0.0:9092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka:9093,EXTERNAL://kafka:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
    volumes:
      - 'sentry-kafka:/var/lib/kafka'
  clickhouse:
    restart: unless-stopped
    image: 'yandex/clickhouse-server:19.4'
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    volumes:
      - 'sentry-clickhouse:/var/lib/clickhouse'
  snuba-api:
    << : *snuba_defaults
  snuba-consumer:
    << : *snuba_defaults
    command: consumer --auto-offset-reset=latest --max-batch-time-ms 750
  snuba-replacer:
    << : *snuba_defaults
    command: replacer --auto-offset-reset=latest --max-batch-size 3
  symbolicator:
    restart: unless-stopped
    image: us.gcr.io/sentryio/symbolicator:latest
    command: run
  web:
    << : *sentry_defaults
    ports:
      - '9000:9000/tcp'
  cron:
    << : *sentry_defaults
    command: run cron
  worker:
    << : *sentry_defaults
    command: run worker
volumes:
  sentry-data:
    external: true
  sentry-postgres:
    external: true
  sentry-redis:
    external: true
  sentry-zookeeper:
    external: true
  sentry-kafka:
    external: true
  sentry-clickhouse:
    external: true
